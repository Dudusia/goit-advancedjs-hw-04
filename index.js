import{a as c,S as y,i as p}from"./assets/vendor-UJd43qMQ.js";(function(){const s=document.createElement("link").relList;if(s&&s.supports&&s.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))o(e);new MutationObserver(e=>{for(const a of e)if(a.type==="childList")for(const i of a.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&o(i)}).observe(document,{childList:!0,subtree:!0});function l(e){const a={};return e.integrity&&(a.integrity=e.integrity),e.referrerPolicy&&(a.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?a.credentials="include":e.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function o(e){if(e.ep)return;e.ep=!0;const a=l(e);fetch(e.href,a)}})();c.defaults.baseURL="https://pixabay.com";const d=async(r,s=1)=>(await c.get("/api",{params:{key:"50853777-8fecba6f69a77bb52efd7171d",q:r,image_type:"photo",orientation:"horizontal",safesearch:!0,per_page:15,page:s}})).data,u=({tags:r,largeImageURL:s,webformatURL:l,likes:o,views:e,comments:a,downloads:i})=>`
    <li class="gallery-item">
        <a href="${s}" class="gallery-link">
            <img src="${l}" alt="${r}" width="360" height="200" class="gallery-image">
        </a>
        <div class="gallery-item-stats">
            <p class="gallery-item-description"><span class="gallery-item-property">Views</span><br>${e}</p>
            <p class="gallery-item-description"><span class="gallery-item-property">Likes</span><br>${o}</p>
            <p class="gallery-item-description"><span class="gallery-item-property">Comments</span><br>${a}</p>
            <p class="gallery-item-description"><span class="gallery-item-property">Downloads</span><br>${i}</p>
        </div>
    </li>
  `,t={gallery:document.querySelector(".gallery"),loader:document.querySelector(".js-loader"),searchForm:document.querySelector(".form"),searchBtn:document.querySelector(".search-button"),loadBtn:document.querySelector(".load-button"),searchInput:document.querySelector(".search-input")};var m=new y(".gallery a",{captions:!0,captionsData:"alt",captionDelay:250});t.searchForm.addEventListener("submit",r=>{r.preventDefault()});t.searchBtn.addEventListener("click",()=>{if(t.loadBtn.classList.remove("active"),n=2,t.searchInput.value.trim())t.gallery.innerHTML="",t.loader.classList.add("active"),d(t.searchInput.value).then(r=>{if(r.total===0){p.warning({message:"Sorry, there are no images matching your search query. Please try again!",position:"topRight"});return}const s=r.hits.map(l=>u(l)).join("");t.gallery.innerHTML=s,m.refresh(),t.loadBtn.classList.add("active")}).catch(r=>{console.log(r)}).finally(()=>{t.loader.classList.remove("active")});else return});var n=2;t.loadBtn.addEventListener("click",()=>{t.loadBtn.classList.remove("active"),t.loader.classList.add("active"),d(t.searchInput.value,n).then(r=>{if(r.hits.length===0){p.warning({message:"We're sorry, but you've reached the end of search results.",position:"topRight"}),n=2;return}else{const s=r.hits.map(l=>u(l)).join("");t.gallery.insertAdjacentHTML("beforeend",s),m.refresh(),n+=1,t.loadBtn.classList.add("active")}}).catch(r=>{console.log(r)}).finally(()=>{t.loader.classList.remove("active")})});
//# sourceMappingURL=index.js.map
